import{r,j as e,A as i,C as n,G as o,F as a,f as s,S as d,b as x,W as p}from"./register-C3QhuqIw.js";function c(l){return l.result&&"quoteId"in l.result?l.result:{...l.result,...l.request}}r("dexter-mcp/solana-swap-preview",l=>{const t=c(l),u=!!t?.expired;return e.jsx(i,{children:e.jsxs(n,{title:"Swap Preview",badge:{label:u?"Expired":"Preview"},children:[e.jsxs(o,{columns:3,children:[e.jsx(a,{label:"Input Mint",value:s(t.inputMint)}),e.jsx(a,{label:"Output Mint",value:s(t.outputMint)}),e.jsx(a,{label:"Mode",value:s(t.mode)}),e.jsx(a,{label:"Amount In (UI)",value:s(t.amountUi??l.request?.amountUi)}),e.jsx(a,{label:"Desired Out (UI)",value:s(t.desiredOutputUi??l.request?.desiredOutputUi)}),e.jsx(a,{label:"Expected Out (UI)",value:s(t.expectedOutputUi)}),e.jsx(a,{label:"Wallet",value:s(t.walletAddress??l.request?.walletAddress)}),e.jsx(a,{label:"Slippage (bps)",value:s(t.slippageBps??l.request?.slippageBps)}),e.jsx(a,{label:"Route",value:s(t.route)}),e.jsx(a,{label:"Price Impact (%)",value:t.priceImpactPct?`${s(t.priceImpactPct)}%`:"—"}),e.jsx(a,{label:"Network Fee (SOL)",value:s(t.networkFeeSol)}),e.jsx(a,{label:"Quote ID",value:s(t.quoteId)})]}),e.jsxs(d,{children:[e.jsxs("span",{children:["Quote expires at ",x(t.expiresAt??null)]}),u?e.jsx(p,{children:"This quote has expired. Generate a fresh preview before executing the swap."}):e.jsx("span",{children:"Looks good—run `solana_swap_execute` using the same parameters when you’re ready."})]})]})})});
